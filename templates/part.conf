# <%= @puppet_header %>
# <%=  __FILE__.gsub(/.*?puppet\//,@fqdn + ':') %>
<%
# this ugly construct is requires because _erbout stops working inside function... and I cba to dig thru ruby shittines to discover why
@__bird__cfg_s=""
def dump_hash(h,d)
  h.each do |k, v|
    @__bird__cfg_s << " " * (2 * d)
    if v.is_a?(Hash)
      @__bird__cfg_s << k + " { \n"
      dump_hash(v,d+1)
      @__bird__cfg_s << "\n"
      @__bird__cfg_s << " " * (2 * d)
      @__bird__cfg_s << "};\n"
    elsif v.is_a?(Array)
      @__bird__cfg_s << k + " { \n"
      v.flatten.each do |line|
        if line.is_a?(Hash)
          line.each do |k, v|
            @__bird__cfg_s << " " * (2 * (d + 1))
            @__bird__cfg_s << k + " { \n"
            dump_hash(v,d+2)
            @__bird__cfg_s << " " * (2 * (d + 1))
            @__bird__cfg_s << "\n};\n"
          end
        else
          @__bird__cfg_s << " " * (2 * (d + 1))
          @__bird__cfg_s << line << ";\n"
        end
      end
      @__bird__cfg_s << "\n"
      @__bird__cfg_s << " " * (2 * (d))
      @__bird__cfg_s << "};\n"
    elsif v.is_a?(TrueClass) || v.is_a?(FalseClass)
      @__bird__cfg_s << k
      if v.is_a?(TrueClass)
         @__bird__cfg_s << " yes;\n"
      else
        @__bird__cfg_s << " no;\n"
      end
    elsif v.nil?
      @__bird__cfg_s << k + ";\n"
    else
      if v.to_s =~ /^\d+$/
        @__bird__cfg_s << k + " " + "#{v}" + ";\n"
      else
        @__bird__cfg_s << k + " " + "\"#{v}\"" + ";\n"
      end
    end
  end
end

dump_hash(@config,0)
%>
<%= @__bird__cfg_s %>
#
